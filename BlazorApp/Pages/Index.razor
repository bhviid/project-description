@page "/"
@inject HttpClient Http

<PageTitle>Index</PageTitle>

<h1>Git Insights</h1>

<form @onsubmit="DisplayInsights">
    <div class="form-floating mb-3">
        <input @bind-value="githubUser" required type="text" class="form-control" id="floatingInput" placeholder="name@example.com">
        <label for="floatingInput">Github Username</label>
    </div>
    <div class="form-floating mb-3">
        <input @bind-value="githubRepo" required type="text" class="form-control" id="floatingPassword" placeholder="Password">
        <label for="floatingPassword">Github Repo Name</label>
    </div>
    <select @bind="mode" required class="form-select mb-2" aria-label="Default select example">
        <option value="frequency" selected>Frequency</option>
        <option value="author">Author</option>
        <option value="average">Gauge!!</option>
    </select>
    <div class="mb-2">
        <RadzenButton ButtonType="Radzen.ButtonType.Submit" class="btn-primary btn">brr</RadzenButton>
    </div>
</form>

<span>
    @insights
    @if (frequencies is not null)
    {
        <RadzenChart Style="height: 600px" >
            <RadzenColumnSeries Data="frequencies"
                         CategoryProperty="Date"
                         ValueProperty="Count"
                         Title="Frequencies"
                         LineType="LineType.Dashed">
            </RadzenColumnSeries>
            <RadzenColumnOptions Radius="5" Width="20"/>
            <RadzenValueAxis>
                <RadzenAxisTitle Text="Commits per date" />
            </RadzenValueAxis>
        </RadzenChart>
    }
    @if (shouldShowGauge)
    {
        <h3>Wow! Check the productivity of contributors for 
            <b>
                github/@githubUser/@githubRepo
            </b>
        </h3>
        <RadzenRadialGauge>
            <RadzenRadialGaugeScale 
                StartAngle="-150" 
                EndAngle="150" 
                Step="2" 
                Min="0" 
                Max="20"
                TickPosition="tickPosition"
            >
                <RadzenRadialGaugeScalePointer Value="averageCommit"/>
                <RadzenRadialGaugeScaleRange From="0" To="8" Fill="green" />
                <RadzenRadialGaugeScaleRange From="8" To="16" Fill="orange"/>
                <RadzenRadialGaugeScaleRange From="16" To="20" Fill="red"/>
            </RadzenRadialGaugeScale>
        </RadzenRadialGauge>
    }

    
</span>
@code {

    private string insights = "";

    private IEnumerable<FrequencyDTO> frequencies;

    private bool shouldShowGauge = false;
    private double averageCommit;
    private GaugeTickPosition tickPosition = GaugeTickPosition.Inside;

    private string mode = "frequency";
    private string githubUser;
    private string githubRepo;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Http.BaseAddress = new Uri("https://localhost:7009/gitrepo/");
    }

    private async Task DisplayInsights()
    {
        shouldShowGauge = false;

        switch(mode)
        {
            case "frequency":
                var response = await Http.GetFromJsonAsync<IEnumerable<FrequencyDTO>>("frequency-test");
                frequencies = response;
                break;
            case "average":
                var responseAverage = await Http.GetFromJsonAsync<float>("average-test");
                shouldShowGauge = true;
                averageCommit = responseAverage;
                averageCommit = 19;
                break;

        }
        //var response = await Http.GetAsync($":5050/girepo/{mode}/{githubUser}/{githubRepo}");
        //if (response.IsSuccessStatusCode)
        //{
        //    insights = await response.Content.ReadAsStringAsync();
        //}
    }
}